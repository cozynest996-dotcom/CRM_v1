version: '3.8'

services:
  db:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_DB: crm_db
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: crm_password
    ports:
      - "5432:5432"
    volumes:
      - crm_data_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crm_user -d crm_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    mem_limit: 1024m # Set memory limit to 1GB
    restart: always
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    environment:
      WHATSAPP_GATEWAY_URL: http://whatsapp_gateway:3002
    volumes:
      - ./backend:/app # Binding mount for local code changes
    depends_on:
      db:
        condition: service_healthy
    entrypoint: ["sh", "-c", "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000 # Browser must use localhost to reach host-mapped backend
      NEXT_PUBLIC_WHATSAPP_GATEWAY_URL: http://localhost:3002 # Browser must use localhost to reach host-mapped gateway
    volumes:
      - ./frontend:/app
      - /app/node_modules # Exclude node_modules from bind mount
    depends_on:
      backend:
        condition: service_started

  whatsapp_gateway:
    build:
      context: ./whatsapp_gateway
      dockerfile: Dockerfile
    ports:
      - "3002:3002" # Assuming WhatsApp gateway runs on port 3002
    environment:
      PUPPETEER_EXECUTABLE_PATH: /usr/bin/chromium # 显式设置 Chromium 路径以避免拼写错误
    volumes:
      - ./whatsapp_gateway:/app
      - ./whatsapp_gateway/user_sessions:/app/user_sessions # Persist session data
    depends_on:
      backend:
        condition: service_started

volumes:
  crm_data_volume:
