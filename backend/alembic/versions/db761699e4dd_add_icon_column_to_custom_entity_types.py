"""Add icon column to custom_entity_types

Revision ID: db761699e4dd
Revises: 0c2c5fe239e3
Create Date: 2025-10-09 22:16:36.771569

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'db761699e4dd'
down_revision: Union[str, Sequence[str], None] = '0c2c5fe239e3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('custom_entity_types', sa.Column('icon', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('custom_entity_types', 'icon')
    op.create_table('custom_entity_records',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('entity_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['entity_type_id'], ['custom_entity_types.id'], name=op.f('fk_custom_entity_records_entity_type_id')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_custom_entity_records_user_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('custom_entity_records_pkey'))
    )
    op.create_table('custom_entity_types',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('custom_entity_types_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_custom_entity_types_user_id'),
    sa.PrimaryKeyConstraint('id', name='custom_entity_types_pkey'),
    sa.UniqueConstraint('user_id', 'name', name='custom_entity_types_user_id_name_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('custom_fields',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('entity_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('field_key', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('field_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('is_required', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('default_value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_searchable', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['entity_type_id'], ['custom_entity_types.id'], name=op.f('fk_custom_fields_entity_type_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('custom_fields_pkey')),
    sa.UniqueConstraint('field_key', name=op.f('custom_fields_field_key_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
